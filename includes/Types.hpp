#ifndef __INCLUDES_TYPES_HPP
#define __INCLUDES_TYPES_HPP

#include <array>
#include <map>
#include <string>

typedef unsigned char u_BYTE;
typedef char BYTE;
typedef unsigned short u_WORD;
typedef short WORD;

// base for the operand
enum BASE { b, d, h, o };

// Token type
enum TOKEN_TYPES {
  TOKEN_INSTRUCTION,
  TOKEN_LABEL,
  TOKEN_ADDDRESS,
  TOKEN_DATA,
  TOKEN_REGISTER,
  TOKEN_NEWLINE,
  TOKEN_EOF,
  TOKEN_COMMENT,
  TOKEN_UNKNOWN,
  TOKEN_COMMA,
  TOKEN_COLON,
  TOKEN_NUMBER
};

enum ERROR_TYPES {
  ERROR_ILLEGAL_INSTRUCTION,
  ERROR_MISSING_COLON,
  ERROR_MISSING_HEX,
  ERROR_ADDRESS_OUT_OF_RANGE,
  ERROR_DATA_OUT_OF_RANGE,
  ERROR_NO_NEWLINE_FOUND,
  ERROR_UNKNOW
};

/***
 * Token struct used for initial token generation from the file
 */
struct TokenStruct {
  unsigned int m_lineNumber;   // line of the token
  unsigned int m_startPos;     // start pos of the token
  unsigned int m_endPos;       // end pos of token
  unsigned long m_totalLength; // length of the token
  TOKEN_TYPES m_tokenType;     // type of toke: INST, LABEL etc..
  std::string m_tokenValue;    // actual value
};

/***
 * AST struct used by parser to parse and understand the token
 */
struct AstStruct {
  unsigned int lineNumber;   // line of the token
  unsigned int startPos;     // start pos of the token
  unsigned int endPos;       // end pos of token
  unsigned long totalLength; // length of the token
  std::string instruction;   // actual instruction
  unsigned char opcode;      // opcode for the instruction
  std::string operandOne;    // first operand if any
  std::string operandTwo;    // second operand if any
  std::string numberBase;
  bool hasErrors;
};

const std::map<std::string, unsigned char> types_mapInstruction{
    {"INS_ADC_A", 0x8F},
    {"INS_ADC_B", 0x88},
    {"INS_ADC_C", 0x89},
    {"INS_ADC_D", 0x8A},
    {"INS_ADC_E", 0x8B},
    {"INS_ADC_H", 0x8C},
    {"INS_ADC_L", 0x8D},
    {"INS_ADC_M", 0x8E},
    {"INS_ADD_A", 0x87},
    {"INS_ADD_B", 0x80},
    {"INS_ADD_C", 0x81},
    {"INS_ADD_D", 0x82},
    {"INS_ADD_E", 0x83},
    {"INS_ADD_H", 0x84},
    {"INS_ADD_L", 0x85},
    {"INS_ADD_M", 0x86},
    {"INS_ADI_Data", 0xC6},
    {"INS_ANA_A", 0xA7},
    {"INS_ANA_B", 0xA0},
    {"INS_ANA_C", 0xA1},
    {"INS_ANA_D", 0xA2},
    {"INS_ANA_E", 0xA3},
    {"INS_ANA_H", 0xA4},
    {"INS_ANA_L", 0xA5},
    {"INS_ANA_M", 0xA6},
    {"INS_ANI_Data", 0xE6},
    {"INS_CALL_Label", 0xCD},
    {"INS_CC_Label", 0xDC},
    {"INS_CM_Label", 0xFC},
    {"INS_CMA", 0x2F},
    {"INS_CMC", 0x3F},
    {"INS_CMP_A", 0xBF},
    {"INS_CMP_B", 0xB8},
    {"INS_CMP_C", 0xB9},
    {"INS_CMP_D", 0xBA},
    {"INS_CMP_E", 0xBB},
    {"INS_CMP_H", 0xBC},
    {"INS_CMP_L", 0xBD},
    {"INS_CMP_M", 0xBD},
    {"INS_CNC_Label", 0xD4},
    {"INS_CNZ_Label", 0xC4},
    {"INS_CP_Label", 0xF4},
    {"INS_CPE_Label", 0xEC},
    {"INS_CPI_Data", 0xFE},
    {"INS_CPO_Label", 0xE4},
    {"INS_CZ_Label", 0xCC},
    {"INS_DAA", 0x27},
    {"INS_DAD_B", 0x09},
    {"INS_DAD_D", 0x19},
    {"INS_DAD_H", 0x29},
    {"INS_DAD_SP", 0x39},
    {"INS_DCR_A", 0x3D},
    {"INS_DCR_B", 0x05},
    {"INS_DCR_C", 0x0D},
    {"INS_DCR_D", 0x15},
    {"INS_DCR_E", 0x1D},
    {"INS_DCR_H", 0x25},
    {"INS_DCR_L", 0x2D},
    {"INS_DCR_M", 0x35},
    {"INS_DCX_B", 0x0B},
    {"INS_DCX_D", 0x1B},
    {"INS_DCX_H", 0x2B},
    {"INS_DCX_SP", 0x3B},
    {"INS_DI", 0xF3},
    {"INS_EI", 0xFB},
    {"INS_HLT", 0x76},
    {"INS_IN_Port-address", 0xDB},
    {"INS_INR_A", 0x3C},
    {"INS_INR_B", 0x04},
    {"INS_INR_C", 0x0C},
    {"INS_INR_D", 0x14},
    {"INS_INR_E", 0x1C},
    {"INS_INR_H", 0x24},
    {"INS_INR_L", 0x2C},
    {"INS_INR_M", 0x34},
    {"INS_INX_B", 0x03},
    {"INS_INX_D", 0x13},
    {"INS_INX_H", 0x23},
    {"INS_INX_SP", 0x33},
    {"INS_JC_Label", 0xDA},
    {"INS_JM_Label", 0xFA},
    {"INS_JMP_Label", 0xC3},
    {"INS_JNC_Label", 0xD2},
    {"INS_JNZ_Label", 0xC2},
    {"INS_JP_Label", 0xF2},
    {"INS_JPE_Label", 0xEA},
    {"INS_JPO_Label", 0xE2},
    {"INS_JZ_Label", 0xCA},
    {"INS_LDA_Address", 0x3A},
    {"INS_LDAX_B", 0x0A},
    {"INS_LDAX_D", 0x1A},
    {"INS_LHLD_Address", 0x2A},
    {"INS_LXI_B", 0x01},
    {"INS_LXI_D", 0x11},
    {"INS_LXI_H", 0x21},
    {"INS_LXI_SP", 0x31},
    {"INS_MOV_A_A", 0x7F},
    {"INS_MOV_A_B", 0x78},
    {"INS_MOV_A_C", 0x79},
    {"INS_MOV_A_D", 0x7A},
    {"INS_MOV_A_E", 0x7B},
    {"INS_MOV_A_H", 0x7C},
    {"INS_MOV_A_L", 0x7D},
    {"INS_MOV_A_M", 0x7E},
    {"INS_MOV_B_A", 0x47},
    {"INS_MOV_B_B", 0x40},
    {"INS_MOV_B_C", 0x41},
    {"INS_MOV_B_D", 0x42},
    {"INS_MOV_B_E", 0x43},
    {"INS_MOV_B_H", 0x44},
    {"INS_MOV_B_L", 0x45},
    {"INS_MOV_B_M", 0x46},
    {"INS_MOV_C_A", 0x4F},
    {"INS_MOV_C_B", 0x48},
    {"INS_MOV_C_C", 0x49},
    {"INS_MOV_C_D", 0x4A},
    {"INS_MOV_C_E", 0x4B},
    {"INS_MOV_C_H", 0x4C},
    {"INS_MOV_C_L", 0x4D},
    {"INS_MOV_C_M", 0x4E},
    {"INS_MOV_D_A", 0x57},
    {"INS_MOV_D_B", 0x50},
    {"INS_MOV_D_C", 0x51},
    {"INS_MOV_D_D", 0x52},
    {"INS_MOV_D_E", 0x53},
    {"INS_MOV_D_H", 0x54},
    {"INS_MOV_D_L", 0x55},
    {"INS_MOV_D_M", 0x56},
    {"INS_MOV_E_A", 0x5F},
    {"INS_MOV_E_B", 0x58},
    {"INS_MOV_E_C", 0x59},
    {"INS_MOV_E_D", 0x5A},
    {"INS_MOV_E_E", 0x5B},
    {"INS_MOV_E_H", 0x5C},
    {"INS_MOV_E_L", 0x5D},
    {"INS_MOV_E_M", 0x5E},
    {"INS_MOV_H_A", 0x67},
    {"INS_MOV_H_B", 0x60},
    {"INS_MOV_H_C", 0x61},
    {"INS_MOV_H_D", 0x62},
    {"INS_MOV_H_E", 0x63},
    {"INS_MOV_H_H", 0x64},
    {"INS_MOV_H_L", 0x65},
    {"INS_MOV_H_M", 0x66},
    {"INS_MOV_L_A", 0x6F},
    {"INS_MOV_L_B", 0x68},
    {"INS_MOV_L_C", 0x69},
    {"INS_MOV_L_D", 0x6A},
    {"INS_MOV_L_E", 0x6B},
    {"INS_MOV_L_H", 0x6C},
    {"INS_MOV_L_L", 0x6D},
    {"INS_MOV_L_M", 0x6E},
    {"INS_MOV_M_A", 0x77},
    {"INS_MOV_M_B", 0x70},
    {"INS_MOV_M_C", 0x71},
    {"INS_MOV_M_D", 0x72},
    {"INS_MOV_M_E", 0x73},
    {"INS_MOV_M_H", 0x74},
    {"INS_MOV_M_L", 0x75},
    {"INS_MVI_A_Data", 0x3E},
    {"INS_MVI_B_Data", 0x06},
    {"INS_MVI_C_Data", 0x0E},
    {"INS_MVI_D_Data", 0x16},
    {"INS_MVI_E_Data", 0x1E},
    {"INS_MVI_H_Data", 0x26},
    {"INS_MVI_L_Data", 0x2E},
    {"INS_MVI_M_Data", 0x36},
    {"INS_NOP", 0x00},
    {"INS_ORA_A", 0xB7},
    {"INS_ORA_B", 0xB0},
    {"INS_ORA_C", 0xB1},
    {"INS_ORA_D", 0xB2},
    {"INS_ORA_E", 0xB3},
    {"INS_ORA_H", 0xB4},
    {"INS_ORA_L", 0xB5},
    {"INS_ORA_M", 0xB6},
    {"INS_ORI_Data", 0xF6},
    {"INS_OUT_Port-Address", 0xD3},
    {"INS_PCHL", 0xE9},
    {"INS_POP_B", 0xC1},
    {"INS_POP_D", 0xD1},
    {"INS_POP_H", 0xE1},
    {"INS_POP_PSW", 0xF1},
    {"INS_PUSH_B", 0xC5},
    {"INS_PUSH_D", 0xD5},
    {"INS_PUSH_H", 0xE5},
    {"INS_PUSH_PSW", 0xF5},
    {"INS_RAL", 0x17},
    {"INS_RAR", 0x1F},
    {"INS_RC", 0xD8},
    {"INS_RET", 0xC9},
    {"INS_RIM", 0x20},
    {"INS_RLC", 0x07},
    {"INS_RM", 0xF8},
    {"INS_RNC", 0xD0},
    {"INS_RNZ", 0xC0},
    {"INS_RP", 0xF0},
    {"INS_RPE", 0xE8},
    {"INS_RPO", 0xE0},
    {"INS_RRC", 0x0F},
    {"INS_RST_0", 0xC7},
    {"INS_RST_1", 0xCF},
    {"INS_RST_2", 0xD7},
    {"INS_RST_3", 0xDF},
    {"INS_RST_4", 0xE7},
    {"INS_RST_5", 0xEF},
    {"INS_RST_6", 0xF7},
    {"INS_RST_7", 0xFF},
    {"INS_RZ", 0xC8},
    {"INS_SBB_A", 0x9F},
    {"INS_SBB_B", 0x98},
    {"INS_SBB_C", 0x99},
    {"INS_SBB_D", 0x9A},
    {"INS_SBB_E", 0x9B},
    {"INS_SBB_H", 0x9C},
    {"INS_SBB_L", 0x9D},
    {"INS_SBB_M", 0x9E},
    {"INS_SBI_Data", 0xDE},
    {"INS_SHLD_Address", 0x22},
    {"INS_SIM", 0x30},
    {"INS_SPHL", 0xF9},
    {"INS_STA_Address", 0x32},
    {"INS_STAX_B", 0x02},
    {"INS_STAX_D", 0x12},
    {"INS_STC", 0x37},
    {"INS_SUB_A", 0x97},
    {"INS_SUB_B", 0x90},
    {"INS_SUB_C", 0x91},
    {"INS_SUB_D", 0x92},
    {"INS_SUB_E", 0x93},
    {"INS_SUB_H", 0x94},
    {"INS_SUB_L", 0x95},
    {"INS_SUB_M", 0x96},
    {"INS_SUI_Data", 0xD6},
    {"INS_XCHG", 0xEB},
    {"INS_XRA_A", 0xAF},
    {"INS_XRA_B", 0xA8},
    {"INS_XRA_C", 0xA9},
    {"INS_XRA_D", 0xAA},
    {"INS_XRA_E", 0xAB},
    {"INS_XRA_H", 0xAC},
    {"INS_XRA_L", 0xAD},
    {"INS_XRA_M", 0xAE},
    {"INS_XRI_Data", 0xEE},
    {"INS_XTHL", 0xE3},
};
#endif